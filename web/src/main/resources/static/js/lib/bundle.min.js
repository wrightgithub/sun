/*
 * Paint 0.1.9
 * Copyright (c) 2016, Kabir Shah
 * http://github.com/KingPixil/paint/
 * Free to use under the MIT license.
 * http://www.opensource.org/licenses/mit-license.php
 */
"use strict";

!function (a) {
    var b = function (a, b) {
        return typeof a === b
    }, c = function (a) {
        return new c.fn.init(a)
    };
    c.fn = c.prototype = {
        constructor: c, init: function (a) {
            return !a.nodeType || 1 !== a.nodeType && 9 !== a.nodeType ? b(a, "string") && (this.e = document.querySelectorAll(a || "\u263a")) : this.e = [a], this.length = this.e.length, this
        }, ready: function (a) {
            "loading" != document.readyState ? a() : document.addEventListener("DOMContentLoaded", a)
        }, each: function (a) {
            for (var b = this.e, c = 0, d = 0, e = b.length; e > d; d++)a.call(b[d], d) === !1 ? c-- : c++;
            return c
        }, val: function (a) {
            return a ? void this.each(function () {
                this.value = a
            }) : this.e[0].value
        }, html: function (a) {
            return this.each(function () {
                this.innerHTML = a
            }), this
        }, hide: function () {
            return this.each(function () {
                this.style.display = "none"
            }), this
        }, show: function () {
            return this.each(function () {
                this.style.display = ""
            }), this
        }, hasClass: function (a) {
            return this.each(function () {
                this.classList ? this.classList.contains(a) : new RegExp("(^| )" + a + "( |$)", "gi").test(this.className)
            }), this
        }, toggleClass: function (a) {
            this.each(function () {
                if (this.classList)this.classList.toggle(a); else {
                    var b = this.className.split(" "), c = b.indexOf(a);
                    c >= 0 ? b.splice(c, 1) : b.push(a), this.className = b.join(" ")
                }
            })
        }, addClass: function (a) {
            return this.each(function () {
                this.classList ? this.classList.add(a) : this.className += " " + a
            }), this
        }, removeClass: function (a) {
            return this.each(function () {
                this.classList ? this.classList.remove(a) : this.className = this.className.replace(new RegExp("(^|\\b)" + a.split(" ").join("|") + "(\\b|$)", "gi"), " ")
            }), this
        }, attr: function (a, b) {
            return this.each(function () {
                this.setAttribute(a, b)
            }), this
        }, css: function (a, b) {
            return this.each(function () {
                this.style[a] = b
            }), this
        }, click: function (a) {
            this.on("click", a)
        }, on: function (a, b) {
            return this.each(function () {
                this.addEventListener(a, b, !1)
            }), this
        }, off: function (a, b) {
            return this.each(function () {
                this.removeEventListener(a, b, !1)
            }), this
        }
    }, c.fn.init.prototype = c.fn, a.paint = c, a.$ || (a.$ = c)
}(this);
// Scripts
$(".button_container").click(function () {
    $(".button_container").toggleClass("active"), $(".overlay").toggleClass("open")
}), $(".menuLink").click(function () {
    $(".button_container").toggleClass("active"), $(".overlay").toggleClass("open")
}), function () {
    "use strict";
    if ("querySelector" in document && "addEventListener" in window && Array.prototype.forEach) {
        var a = function (a, b) {
            var g, c = window.pageYOffset, d = a.offsetTop, e = d - c, f = e / (b / 16), h = function () {
                window.scrollBy(0, f), g()
            };
            g = f >= 0 ? function () {
                var a = window.pageYOffset;
                (a >= d - f || window.innerHeight + a >= document.body.offsetHeight) && clearInterval(i)
            } : function () {
                var a = window.pageYOffset;
                (d || 0) >= a && clearInterval(i)
            };
            var i = setInterval(h, 16)
        }, b = document.querySelectorAll(".scroll");
        [].forEach.call(b, function (b) {
            b.addEventListener("click", function (c) {
                c.preventDefault();
                var d = b.getAttribute("href"), e = document.querySelector(d), f = b.getAttribute("data-speed");
                e && a(e, f || 500)
            }, !1)
        })
    }
}();
